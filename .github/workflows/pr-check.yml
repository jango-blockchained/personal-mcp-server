name: PR Check

on:
  pull_request:
    branches: [ main ]

jobs:
  pr-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check formatting
        run: npm run format:check
      
      - name: Lint code
        run: npm run lint
      
      - name: Check version consistency
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          INDEX_VERSION=$(grep -o "version: '[^']*'" src/index.ts | head -1 | sed "s/version: '//;s/'//")
          
          echo "Package.json version: $PACKAGE_VERSION"
          echo "src/index.ts version: $INDEX_VERSION"
          
          if [ "$PACKAGE_VERSION" != "$INDEX_VERSION" ]; then
            echo "::error::Version mismatch! package.json ($PACKAGE_VERSION) != src/index.ts ($INDEX_VERSION)"
            exit 1
          else
            echo "Versions match: $PACKAGE_VERSION"
          fi
      
      - name: Build package
        run: npm run build
        
      - name: Run tests
        run: npm test
        
      - name: Run tests with coverage
        run: npm run test:coverage
        
      - name: Report test coverage
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | node -p "JSON.parse(require('fs').readFileSync(0)).total.lines.pct")
          echo "Test coverage: $COVERAGE%"
          
          IS_BELOW_THRESHOLD=$(node -e "console.log(Number($COVERAGE) < 70)")
          
          if [ "$IS_BELOW_THRESHOLD" = "true" ]; then
            echo "::warning::Test coverage ($COVERAGE%) is below 70%"
          else
            echo "::notice::Test coverage is $COVERAGE%"
          fi
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/ 