{
	"name": "@aashari/boilerplate-mcp-server",
	"version": "1.17.2",
	"description": "A boilerplate Model Context Protocol (MCP) server implementation using TypeScript",
	"type": "module",
	"main": "./dist/index.js",
	"types": "./dist/index.d.ts",
	"exports": {
		".": {
			"import": "./dist/index.js",
			"require": "./dist/index.cjs",
			"types": "./dist/index.d.ts"
		}
	},
	"bin": {
		"boilerplate-mcp-server": "./dist/bin.cjs"
	},
	"scripts": {
		"build": "node scripts/build.js",
		"check": "npm run format:check && npm run lint",
		"clean": "rimraf dist",
		"dev": "tsup src/index.ts src/bin.ts --format cjs,esm --watch --silent",
		"fix": "npm run format && npm run lint:fix",
		"format:check": "prettier --check \"{src,scripts}/**/*.{ts,js}\"",
		"format": "prettier --write --no-semi --single-quote --prettier-options \"{\\\"embeddedLanguageFormatting\\\": \\\"off\\\"}\" \"**/*.{ts,tsx,js,jsx,json}\"",
		"generate-resources": "node scripts/generate-mcp-resources.js",
		"inspector": "MCP_TOOLS_DEBUG=true node dist/index.cjs",
		"lint:fix": "eslint \"{src,scripts}/**/*.{ts,js}\" --fix",
		"lint": "eslint \"{src,scripts}/**/*.{ts,js}\"",
		"prepare": "node scripts/ensure-deps.js && npm run build || node scripts/ensure-deps.js",
		"prepublishOnly": "npm run build",
		"postinstall": "node -e \"try { require('./dist/index.cjs'); } catch(e) { console.log('Running build...'); try { require('child_process').execSync('npm run build', {stdio: 'inherit'}); } catch(e) { console.log('Build failed, creating fallback files...'); const fs = require('fs'); const path = require('path'); const dist = path.join(process.cwd(), 'dist'); if (!fs.existsSync(dist)) { fs.mkdirSync(dist, { recursive: true }); } fs.writeFileSync(path.join(dist, 'bin.cjs'), '#!/usr/bin/env node\\nconsole.error(\\'Fallback build - please run npm rebuild to create proper build\\');process.exit(1);'); fs.chmodSync(path.join(dist, 'bin.cjs'), '755'); fs.writeFileSync(path.join(dist, 'index.cjs'), 'module.exports={error:\\'Fallback build\\',rebuild:function(){console.log(\\'Run npm rebuild\\');}};'); } }\"",
		"start": "node dist/index.cjs",
		"test": "jest",
		"test:watch": "jest --watch",
		"test:coverage": "jest --coverage --coverageReporters=text --coverageReporters=json-summary --coverageReporters=html",
		"update-version": "node scripts/update-version.js"
	},
	"files": [
		"dist/index.cjs",
		"dist/index.mjs",
		"dist/index.d.cts",
		"dist/index.d.mts",
		"dist/bin.cjs",
		"dist/bin.mjs",
		"dist/bin.d.cts",
		"dist/bin.d.mts",
		"scripts/build.js",
		"scripts/ensure-deps.js",
		"README.md",
		"LICENSE"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/aashari/boilerplate-mcp-server.git"
	},
	"publishConfig": {
		"access": "public",
		"registry": "https://npm.pkg.github.com"
	},
	"keywords": [
		"mcp",
		"model-context-protocol",
		"ai",
		"llm",
		"typescript",
		"server",
		"boilerplate",
		"node.js",
		"cli",
		"automation"
	],
	"author": {
		"name": "Andi Ashari",
		"url": "https://github.com/aashari"
	},
	"license": "ISC",
	"bugs": {
		"url": "https://github.com/aashari/boilerplate-mcp-server/issues"
	},
	"homepage": "https://github.com/aashari/boilerplate-mcp-server#readme",
	"engines": {
		"node": ">=22.14.0"
	},
	"volta": {
		"node": "22.14.0"
	},
	"packageManager": "npm@10.8.3",
	"typesVersions": {
		">=4.0": {
			"*": [
				"dist/index.d.cts"
			]
		}
	},
	"dependencies": {
		"@modelcontextprotocol/sdk": "1.7.0",
		"commander": "13.1.0",
		"esbuild": "0.25.1",
		"tsup": "8.4.0",
		"typescript": "5.8.2",
		"zod": "3.24.2"
	},
	"devDependencies": {
		"@commander-js/extra-typings": "13.1.0",
		"@eslint/js": "9.22.0",
		"@modelcontextprotocol/inspector": "0.6.0",
		"@types/jest": "29.5.14",
		"@types/node": "22.13.10",
		"dotenv": "16.4.7",
		"eslint": "9.22.0",
		"eslint-config-prettier": "10.1.1",
		"eslint-plugin-prettier": "5.2.3",
		"jest": "29.7.0",
		"prettier": "3.5.3",
		"rimraf": "6.0.1",
		"ts-jest": "29.2.6",
		"ts-node": "10.9.2",
		"typescript-eslint": "8.26.1"
	}
}
